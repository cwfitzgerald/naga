// language: metal2.0
#include <metal_stdlib>
#include <simd/simd.h>

using metal::uint;

struct UniformIndex {
    uint index;
};
struct FragmentIn {
    uint index;
};

struct main_Input {
    uint index [[user(loc0), flat]];
};
struct main_Output {
    metal::float4 member [[color(0)]];
};
fragment main_Output main_(
  main_Input varyings [[stage_in]]
, metal::array<metal::texture2d<float, metal::access::sample>, 10> texture_array1_ [[texture(0)]]
, metal::sampler samp [[user(fake0)]]
) {
    const FragmentIn in = { varyings.index };
    metal::float4 a1_ = texture_array1_[0].sample(samp, metal::float2(0.0, 0.0));
    return main_Output { metal::float4(0.0) };
}
